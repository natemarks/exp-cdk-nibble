{ 
  "schemaVersion": "2.2",
  "description": "Use this document to check the splunk and signalfx configs",
  "parameters": {
    "SplunkPackage": {
      "description": "The splunk package as displayed by rpm -qa",
      "type": "String",
      "default": "splunkforwarder-8.1.4-17f862b42a7c.x86_64"
    },
    "SFXLogrotateConfigSha256Sum": {
      "description": "Expected sha256sum of /etc/logrotate.d/logrotate_signalfx-agent_log.conf",
      "type": "String",
      "default": "75458a5acb3961c7b8cef8cc220edf5645aa179b70ba12c7e9fca5168d21f0d1"
    }
  },
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "check_splunk_sfx_config",
      "inputs": {
        "SplunkPackage": "{{ SplunkPackage }}",
        "SFXLogrotateConfigSha256Sum": "{{ SFXLogrotateConfigSha256Sum }}",
        "runCommand": [
          "#!/usr/bin/env bash",
          "# https://gist.github.com/natemarks/aebb7e84010d4bc37270d554106cb38b",
          "set -Eeuo pipefail",
          "trap cleanup SIGINT SIGTERM ERR EXIT",
          "",
          "# shellcheck disable=SC2034",
          "script_dir=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &>/dev/null && pwd -P)",
          "",
          "usage() {",
          "  cat <<EOF",
          "Usage: $(basename \"${BASH_SOURCE[0]}\") [-h] [-v]",
          "",
          "Check for:",
          " - latest splunk RPM",
          " - /opt/splunkforwarder/etc/system/local/inputs.conf",
          " - logrotate_signalfx-agent_log.conf",
          "",
          "Available options:",
          "",
          "-h, --help      Print this help and exit",
          "-v, --verbose   Print script debug info",
          "EOF",
          "  exit",
          "}",
          "",
          "cleanup() {",
          "  trap - SIGINT SIGTERM ERR EXIT",
          "  # script cleanup here",
          "}",
          "",
          "setup_colors() {",
          "  if [[ -t 2 ]] && [[ -z \"${NO_COLOR-}\" ]] && [[ \"${TERM-}\" != \"dumb\" ]]; then",
          "    NOFORMAT='\\033[0m' RED='\\033[0;31m' GREEN='\\033[0;32m' ORANGE='\\033[0;33m' BLUE='\\033[0;34m' PURPLE='\\033[0;35m' CYAN='\\033[0;36m' YELLOW='\\033[1;33m'",
          "  else",
          "    # shellcheck disable=SC2034",
          "    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''",
          "  fi",
          "}",
          "",
          "msg() {",
          "  echo >&2 -e \"${1-}\"",
          "}",
          "",
          "die() {",
          "  local msg=$1",
          "  local code=${2-1} # default exit status 1",
          "  msg \"$msg\"",
          "  exit \"$code\"",
          "}",
          "",
          "parse_params() {",
          "  # default values of variables set from params",
          "",
          "  while :; do",
          "    case \"${1-}\" in",
          "    -h | --help) usage ;;",
          "    -v | --verbose) set -xv ;;",
          "    --no-color) NO_COLOR=1 ;;",
          "    -?*) die \"Unknown option: $1\" ;;",
          "    *) break ;;",
          "    esac",
          "    shift",
          "  done",
          "",
          "",
          "  return 0",
          "}",
          "",
          "parse_params \"$@\"",
          "setup_colors",
          "",
          "declare -r EXPECTED_SPLUNK_PKG=\"{{SplunkPackage}}\"",
          "declare -r SFX_LOGROTATE_CONFIG=\"/etc/logrotate.d/logrotate_signalfx-agent_log.conf\"",
          "declare -r EXPECTED_SFX_LOGROTATE_SHA256=\"{{SFXLogrotateConfigSha256Sum}}\"",
          "function check_splunk_pkg() {",
          "  local CURRENT_SPLUNK_PKG",
          "  CURRENT_SPLUNK_PKG=\"$(sudo rpm -qa | grep splunk)\"",
          "  if [ \"${CURRENT_SPLUNK_PKG}\" == \"${EXPECTED_SPLUNK_PKG}\" ]; then",
          "    msg \"${GREEN} Correct splunk package is installed: ${EXPECTED_SPLUNK_PKG}${NOFORMAT}\"",
          "  else",
          "    die \"${RED} ${CURRENT_SPLUNK_PKG} is installed.  Should be: ${EXPECTED_SPLUNK_PKG}${NOFORMAT}\"",
          "  fi",
          "}",
          "",
          "function check_splunk_config() {",
          "  local INPUTS=/opt/splunkforwarder/etc/system/local/inputs.conf",
          "  local HOSTNAME",
          "  HOSTNAME=\"$(hostname -s)\"",
          "  # match the hostname at the end of the line so we DON'T match the FQDN",
          "  sudo  grep \"${HOSTNAME}\\$\" \"${INPUTS}\"",
          "  local STATUS=$?",
          "  if (( STATUS == 0 )) ; then",
          "    msg \"${GREEN} The splunk inputs.conf file looks good${NOFORMAT}\"",
          "  else",
          "  die \"${RED} ${INPUTS} doesn't look right${NOFORMAT}\"",
          "  fi",
          "}",
          "",
          "",
          "function check_sfx_logrotate_config() {",
          "  if [[ ! -f \"${SFX_LOGROTATE_CONFIG}\" ]]; then",
          "    die \"${RED} ${SFX_LOGROTATE_CONFIG} does not exist${NOFORMAT}\"",
          "  fi",
          "",
          "  local CURRENT_SHA256SUM",
          "  CURRENT_SHA256SUM=\"$(sudo sha256sum ${SFX_LOGROTATE_CONFIG} | awk '{print $1}')\"",
          "  if [ \"${CURRENT_SHA256SUM}\" == \"${EXPECTED_SFX_LOGROTATE_SHA256}\" ]; then",
          "    msg \"${GREEN}${SFX_LOGROTATE_CONFIG} looks correct${NOFORMAT}\"",
          "  else",
          "    die \"${RED} ${SFX_LOGROTATE_CONFIG} sha256sum doesn't match expected${NOFORMAT}\"",
          "  fi",
          "}",
          "",
          "",
          "check_splunk_pkg",
          "check_splunk_config",
          "check_sfx_logrotate_config",
          "exit 0"
        ]
      }
    }
  ]
}